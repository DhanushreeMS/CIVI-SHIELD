
import React, { useState, useRef } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import Navbar from "@/components/Navbar";
import ChatBot from "@/components/ChatBot";
import QuickActionCard from "@/components/QuickActionCard";
import FeatureCard from "@/components/FeatureCard";
import EmergencyContacts from "@/components/EmergencyContacts";

const Index = () => {
  const [isChatOpen, setIsChatOpen] = useState(false);
  const [isEmergencyContactsOpen, setIsEmergencyContactsOpen] = useState(false);
  const [chatPrompt, setChatPrompt] = useState('');
  const [currentLanguage, setCurrentLanguage] = useState('en');

  // Refs for smooth scrolling
  const heroRef = useRef<HTMLElement>(null);
  const dashboardRef = useRef<HTMLElement>(null);
  const featuresRef = useRef<HTMLElement>(null);

  // Language translations
  const translations = {
    en: {
      title: "CIVI-SHIELD",
      subtitle: "AI-Powered Multilingual Emergency Response System",
      getStarted: "Get Started",
      reportEmergency: "ЁЯЪи Report Emergency",
      keyFeatures: "Key Features",
      quickActions: "Emergency Quick Actions",
      support24: "24/7 Emergency Support",
      supportDesc: "CIVI-SHIELD AI is available round the clock to assist you in any emergency situation",
      startAI: "Start AI Assistant",
      madeFor: "ЁЯЗоЁЯЗ│ Made for Indian Citizens"
    },
    hi: {
      title: "рд╕рд┐рд╡рд┐-рд╢реАрд▓реНрдб",
      subtitle: "AI-рд╕рдВрдЪрд╛рд▓рд┐рдд рдмрд╣реБрднрд╛рд╖реА рдЖрдкрд╛рддрдХрд╛рд▓реАрди рдкреНрд░рддрд┐рдХреНрд░рд┐рдпрд╛ рдкреНрд░рдгрд╛рд▓реА",
      getStarted: "рд╢реБрд░реВ рдХрд░реЗрдВ",
      reportEmergency: "ЁЯЪи рдЖрдкрд╛рддрдХрд╛рд▓ рд░рд┐рдкреЛрд░реНрдЯ рдХрд░реЗрдВ",
      keyFeatures: "рдореБрдЦреНрдп рд╡рд┐рд╢реЗрд╖рддрд╛рдПрдВ",
      quickActions: "рдЖрдкрд╛рддрдХрд╛рд▓реАрди рддреНрд╡рд░рд┐рдд рдХрд╛рд░реНрдп",
      support24: "24/7 рдЖрдкрд╛рддрдХрд╛рд▓реАрди рд╕рд╣рд╛рдпрддрд╛",
      supportDesc: "рд╕рд┐рд╡рд┐-рд╢реАрд▓реНрдб AI рдХрд┐рд╕реА рднреА рдЖрдкрд╛рддрдХрд╛рд▓реАрди рд╕реНрдерд┐рддрд┐ рдореЗрдВ рдЖрдкрдХреА рд╕рд╣рд╛рдпрддрд╛ рдХреЗ рд▓рд┐рдП 24 рдШрдВрдЯреЗ рдЙрдкрд▓рдмреНрдз рд╣реИ",
      startAI: "AI рд╕рд╣рд╛рдпрдХ рд╢реБрд░реВ рдХрд░реЗрдВ",
      madeFor: "ЁЯЗоЁЯЗ│ рднрд╛рд░рддреАрдп рдирд╛рдЧрд░рд┐рдХреЛрдВ рдХреЗ рд▓рд┐рдП рдмрдирд╛рдпрд╛ рдЧрдпрд╛"
    },
    ta: {
      title: "роЪро┐ро╡ро┐-ро╖рпАро▓рпНроЯрпН",
      subtitle: "AI-роЗропроЩрпНроХрпБроорпН рокройрпНроорпКро┤ро┐ роЕро╡роЪро░роХро╛ро▓ рооро▒рпБроорпКро┤ро┐ роЕроорпИрокрпНрокрпБ",
      getStarted: "родрпКроЯроЩрпНроХрпБроЩрпНроХро│рпН",
      reportEmergency: "ЁЯЪи роЕро╡роЪро░роиро┐ро▓рпИропрпИ рокрпБроХро╛ро░ро│ро┐ропрпБроЩрпНроХро│рпН",
      keyFeatures: "роорпБроХрпНроХро┐роп роЕроорпНроЪроЩрпНроХро│рпН",
      quickActions: "роЕро╡роЪро░роХро╛ро▓ ро╡ро┐ро░рпИро╡рпБ роироЯро╡роЯро┐роХрпНроХрпИроХро│рпН",
      support24: "24/7 роЕро╡роЪро░роХро╛ро▓ роЖродро░ро╡рпБ",
      supportDesc: "роЪро┐ро╡ро┐-ро╖рпАро▓рпНроЯрпН AI роОроирпНрод роЕро╡роЪро░роХро╛ро▓ роЪрпВро┤рпНроиро┐ро▓рпИропро┐ро▓рпБроорпН роЙроЩрпНроХро│рпБроХрпНроХрпБ роЙродро╡ 24 роорогро┐ роирпЗро░роорпБроорпН роХро┐роЯрпИроХрпНроХро┐ро▒родрпБ",
      startAI: "AI роЙродро╡ро┐ропро╛ро│ро░рпИродрпН родрпКроЯроЩрпНроХрпБроЩрпНроХро│рпН",
      madeFor: "ЁЯЗоЁЯЗ│ роЗроирпНродро┐роп роХрпБроЯро┐роороХрпНроХро│рпБроХрпНроХро╛роХ роЙро░рпБро╡ро╛роХрпНроХрокрпНрокроЯрпНроЯродрпБ"
    },
    te: {
      title: "р░╕р░┐р░╡р░┐-р░╖р▒Ар░▓р▒Нр░бр▒Н",
      subtitle: "AI-р░╢р░Хр▒Нр░др░┐р░др▒Л р░Хр▒Вр░бр░┐р░и р░мр░╣р▒Бр░нр░╛р░╖р░╛ р░Ер░др▒Нр░пр░╡р░╕р░░ р░кр▒Нр░░р░др░┐р░╕р▒Нр░кр░Вр░жр░и р░╡р▒Нр░пр░╡р░╕р▒Нр░е",
      getStarted: "р░кр▒Нр░░р░╛р░░р░Вр░нр░┐р░Вр░Ър░Вр░бр░┐",
      reportEmergency: "ЁЯЪи р░Ер░др▒Нр░пр░╡р░╕р░░р░╛р░ир▒Нр░ир░┐ р░ир░┐р░╡р▒Зр░жр░┐р░Вр░Ър░Вр░бр░┐",
      keyFeatures: "р░ор▒Бр░Цр▒Нр░п р░▓р░Хр▒Нр░╖р░гр░╛р░▓р▒Б",
      quickActions: "р░Ер░др▒Нр░пр░╡р░╕р░░ р░др▒Нр░╡р░░р░┐р░д р░Ър░░р▒Нр░пр░▓р▒Б",
      support24: "24/7 р░Ер░др▒Нр░пр░╡р░╕р░░ р░ор░жр▒Нр░жр░др▒Б",
      supportDesc: "р░╕р░┐р░╡р░┐-р░╖р▒Ар░▓р▒Нр░бр▒Н AI р░П р░Ер░др▒Нр░пр░╡р░╕р░░ р░кр░░р░┐р░╕р▒Нр░ер░┐р░др░┐р░▓р▒Лр░ир▒Ир░ир░╛ р░ор▒Ар░Хр▒Б р░╕р░╣р░╛р░пр░В р░Ър▒Зр░пр░бр░╛р░ир░┐р░Хр░┐ 24 р░Чр░Вр░Яр░▓р▒В р░Ер░Вр░жр▒Бр░мр░╛р░Яр▒Бр░▓р▒Л р░Йр░Вр░жр░┐",
      startAI: "AI р░╕р░╣р░╛р░пр░Хр▒Бр░бр░┐р░ир░┐ р░кр▒Нр░░р░╛р░░р░Вр░нр░┐р░Вр░Ър░Вр░бр░┐",
      madeFor: "ЁЯЗоЁЯЗ│ р░нр░╛р░░р░др▒Ар░п р░кр▒Мр░░р▒Бр░▓ р░Хр▒Лр░╕р░В р░др░пр░╛р░░р▒Б р░Ър▒Зр░пр░мр░бр░┐р░Вр░жр░┐"
    },
    kn: {
      title: "р▓╕р▓┐р▓╡р▓┐-р▓╢р│Ар▓▓р│Нр▓бр│Н",
      subtitle: "AI-р▓Ър▓╛р▓▓р▓┐р▓д р▓мр▓╣р│Бр▓нр▓╛р▓╖р▓╛ р▓др│Бр▓░р│Нр▓др│Б р▓кр│Нр▓░р▓др▓┐р▓Хр│Нр▓░р▓┐р▓пр│Ж р▓╡р│Нр▓пр▓╡р▓╕р│Нр▓ер│Ж",
      getStarted: "р▓кр│Нр▓░р▓╛р▓░р▓Вр▓нр▓┐р▓╕р▓┐",
      reportEmergency: "ЁЯЪи р▓др│Бр▓░р│Нр▓др│Бр▓╕р│Нр▓ер▓┐р▓др▓┐р▓пр▓ир│Нр▓ир│Б р▓╡р▓░р▓жр▓┐ р▓ор▓╛р▓бр▓┐",
      keyFeatures: "р▓ор│Бр▓Цр│Нр▓п р▓╡р│Ир▓╢р▓┐р▓╖р│Нр▓Яр│Нр▓пр▓Чр▓│р│Б",
      quickActions: "р▓др│Бр▓░р│Нр▓др│Б р▓др│Нр▓╡р▓░р▓┐р▓д р▓Хр│Нр▓░р▓┐р▓пр│Жр▓Чр▓│р│Б",
      support24: "24/7 р▓др│Бр▓░р│Нр▓др│Б р▓мр│Жр▓Вр▓мр▓▓",
      supportDesc: "р▓╕р▓┐р▓╡р▓┐-р▓╢р│Ар▓▓р│Нр▓бр│Н AI р▓пр▓╛р▓╡р│Бр▓жр│З р▓др│Бр▓░р│Нр▓др│Б р▓кр▓░р▓┐р▓╕р│Нр▓ер▓┐р▓др▓┐р▓пр▓▓р│Нр▓▓р▓┐ р▓ир▓┐р▓ор▓Чр│Ж р▓╕р▓╣р▓╛р▓п р▓ор▓╛р▓бр▓▓р│Б 24 р▓Чр▓Вр▓Яр│Жр▓Чр▓│р│В р▓▓р▓нр│Нр▓пр▓╡р▓┐р▓жр│Ж",
      startAI: "AI р▓╕р▓╣р▓╛р▓пр▓Хр▓╡р▓ир│Нр▓ир│Б р▓кр│Нр▓░р▓╛р▓░р▓Вр▓нр▓┐р▓╕р▓┐",
      madeFor: "ЁЯЗоЁЯЗ│ р▓нр▓╛р▓░р▓др│Ар▓п р▓ир▓╛р▓Чр▓░р▓┐р▓Хр▓░р▓┐р▓Чр▓╛р▓Чр▓┐ р▓др▓пр▓╛р▓░р▓┐р▓╕р▓▓р▓╛р▓Чр▓┐р▓жр│Ж"
    }
  };

  const t = translations[currentLanguage as keyof typeof translations] || translations.en;

  const openChatWithPrompt = (prompt: string) => {
    setChatPrompt(prompt);
    setIsChatOpen(true);
  };

  const scrollToSection = (ref: React.RefObject<HTMLElement>) => {
    ref.current?.scrollIntoView({ behavior: 'smooth' });
  };

  const handleNavigation = (section: string) => {
    switch (section) {
      case 'home':
        scrollToSection(heroRef);
        break;
      case 'dashboard':
        scrollToSection(dashboardRef);
        break;
      case 'emergency':
        setIsEmergencyContactsOpen(true);
        break;
      case 'ai-assistant':
        openChatWithPrompt("Hi, I need assistance. Can you help me?");
        break;
    }
  };

  const quickActions = [
    {
      icon: "ЁЯФе",
      title: currentLanguage === 'hi' ? "рдЖрдЧ рдЖрдкрд╛рддрдХрд╛рд▓" : currentLanguage === 'ta' ? "родрпА роЕро╡роЪро░роиро┐ро▓рпИ" : currentLanguage === 'te' ? "р░Ер░Чр▒Нр░ир░┐ р░Ер░др▒Нр░пр░╡р░╕р░░р░В" : currentLanguage === 'kn' ? "р▓мр│Жр▓Вр▓Хр▓┐ р▓др│Бр▓░р│Нр▓др│Бр▓╕р│Нр▓ер▓┐р▓др▓┐" : "Fire Emergency",
      description: currentLanguage === 'hi' ? "рдЕрдЧреНрдирд┐ рд╕реБрд░рдХреНрд╖рд╛ рдФрд░ рдирд┐рдХрд╛рд╕реА" : currentLanguage === 'ta' ? "родрпА рокро╛родрпБроХро╛рокрпНрокрпБ рооро▒рпНро▒рпБроорпН ро╡рпЖро│ро┐ропрпЗро▒рпНро▒роорпН" : currentLanguage === 'te' ? "р░Ер░Чр▒Нр░ир░┐ р░нр░жр▒Нр░░р░д р░ор░░р░┐р░пр▒Б р░др░░р░▓р░┐р░Вр░кр▒Б" : currentLanguage === 'kn' ? "р▓мр│Жр▓Вр▓Хр▓┐ р▓╕р│Бр▓░р▓Хр│Нр▓╖р▓др│Ж р▓ор▓др│Нр▓др│Б р▓╕р│Нр▓ер▓│р▓╛р▓Вр▓др▓░" : "Fire safety and evacuation",
      color: "bg-red-500",
      prompt: "There's a fire in my house. What should I do immediately? Please provide step-by-step emergency instructions."
    },
    {
      icon: "ЁЯМК", 
      title: currentLanguage === 'hi' ? "рдмрд╛рдврд╝ рдЖрдкрд╛рддрдХрд╛рд▓" : currentLanguage === 'ta' ? "ро╡рпЖро│рпНро│роорпН роЕро╡роЪро░роиро┐ро▓рпИ" : currentLanguage === 'te' ? "р░╡р░░р░ж р░Ер░др▒Нр░пр░╡р░╕р░░р░В" : currentLanguage === 'kn' ? "р▓кр│Нр▓░р▓╡р▓╛р▓╣ р▓др│Бр▓░р│Нр▓др│Бр▓╕р│Нр▓ер▓┐р▓др▓┐" : "Flood Emergency",
      description: currentLanguage === 'hi' ? "рдмрд╛рдврд╝ рдкреНрд░рддрд┐рдХреНрд░рд┐рдпрд╛ рдФрд░ рд╕реБрд░рдХреНрд╖рд╛" : currentLanguage === 'ta' ? "ро╡рпЖро│рпНро│ рокродро┐ро▓ро│ро┐рокрпНрокрпБ рооро▒рпНро▒рпБроорпН рокро╛родрпБроХро╛рокрпНрокрпБ" : currentLanguage === 'te' ? "р░╡р░░р░ж р░кр▒Нр░░р░др░┐р░╕р▒Нр░кр░Вр░жр░и р░ор░░р░┐р░пр▒Б р░нр░жр▒Нр░░р░д" : currentLanguage === 'kn' ? "р▓кр│Нр▓░р▓╡р▓╛р▓╣ р▓кр│Нр▓░р▓др▓┐р▓Хр│Нр▓░р▓┐р▓пр│Ж р▓ор▓др│Нр▓др│Б р▓╕р│Бр▓░р▓Хр│Нр▓╖р▓др│Ж" : "Flood response and safety",
      color: "bg-blue-500",
      prompt: "I'm in a flood zone and water is rising. What should I do to stay safe? Give me immediate action steps."
    },
    {
      icon: "ЁЯПе",
      title: currentLanguage === 'hi' ? "рдЪрд┐рдХрд┐рддреНрд╕рд╛ рдЖрдкрд╛рддрдХрд╛рд▓" : currentLanguage === 'ta' ? "рооро░рпБродрпНродрпБро╡ роЕро╡роЪро░роиро┐ро▓рпИ" : currentLanguage === 'te' ? "р░╡р▒Ир░жр▒Нр░п р░Ер░др▒Нр░пр░╡р░╕р░░р░В" : currentLanguage === 'kn' ? "р▓╡р│Ир▓жр│Нр▓пр▓Хр│Ар▓п р▓др│Бр▓░р│Нр▓др│Бр▓╕р│Нр▓ер▓┐р▓др▓┐" : "Medical Emergency", 
      description: currentLanguage === 'hi' ? "рдкреНрд░рд╛рдердорд┐рдХ рдЪрд┐рдХрд┐рддреНрд╕рд╛ рдФрд░ рдЪрд┐рдХрд┐рддреНрд╕рд╛ рд╕рд╣рд╛рдпрддрд╛" : currentLanguage === 'ta' ? "роорпБродро▓рпБродро╡ро┐ рооро▒рпНро▒рпБроорпН рооро░рпБродрпНродрпБро╡ роЙродро╡ро┐" : currentLanguage === 'te' ? "р░кр▒Нр░░р░ер░о р░Ър░┐р░Хр░┐р░др▒Нр░╕ р░ор░░р░┐р░пр▒Б р░╡р▒Ир░жр▒Нр░п р░╕р░╣р░╛р░пр░В" : currentLanguage === 'kn' ? "р▓кр│Нр▓░р▓ер▓о р▓Ър▓┐р▓Хр▓┐р▓др│Нр▓╕р│Ж р▓ор▓др│Нр▓др│Б р▓╡р│Ир▓жр│Нр▓пр▓Хр│Ар▓п р▓╕р▓╣р▓╛р▓п" : "First aid and medical help",
      color: "bg-green-500",
      prompt: "Someone is bleeding heavily and needs immediate help. What first aid steps should I take right now?"
    },
    {
      icon: "ЁЯСо",
      title: currentLanguage === 'hi' ? "рдкреБрд▓рд┐рд╕/рд╕реБрд░рдХреНрд╖рд╛" : currentLanguage === 'ta' ? "роХро╛ро╡ро▓рпНродрпБро▒рпИ/рокро╛родрпБроХро╛рокрпНрокрпБ" : currentLanguage === 'te' ? "р░кр▒Лр░▓р▒Ар░╕р▒Б/р░нр░жр▒Нр░░р░д" : currentLanguage === 'kn' ? "р▓кр│Кр▓▓р│Ар▓╕р│Н/р▓╕р│Бр▓░р▓Хр│Нр▓╖р▓др│Ж" : "Police/Safety",
      description: currentLanguage === 'hi' ? "рдХрд╛рдиреВрдиреА рдЕрдзрд┐рдХрд╛рд░ рдФрд░ рд╕реБрд░рдХреНрд╖рд╛" : currentLanguage === 'ta' ? "роЪроЯрпНроЯ роЙро░ро┐роорпИроХро│рпН рооро▒рпНро▒рпБроорпН рокро╛родрпБроХро╛рокрпНрокрпБ" : currentLanguage === 'te' ? "р░Ър░Яр▒Нр░Яр░кр░░р░ор▒Ир░и р░╣р░Хр▒Нр░Хр▒Бр░▓р▒Б р░ор░░р░┐р░пр▒Б р░нр░жр▒Нр░░р░д" : currentLanguage === 'kn' ? "р▓Хр▓╛р▓ир│Вр▓ир│Б р▓╣р▓Хр│Нр▓Хр│Бр▓Чр▓│р│Б р▓ор▓др│Нр▓др│Б р▓╕р│Бр▓░р▓Хр│Нр▓╖р▓др│Ж" : "Legal rights and safety",
      color: "bg-purple-500", 
      prompt: "I'm being harassed and need help. What are my legal rights and what should I do immediately?"
    }
  ];

  const features = [
    {
      icon: "ЁЯдЦ",
      title: currentLanguage === 'hi' ? "AI рд╕рд╣рд╛рдпрдХ" : currentLanguage === 'ta' ? "AI роЙродро╡ро┐ропро╛ро│ро░рпН" : currentLanguage === 'te' ? "AI р░╕р░╣р░╛р░пр░Хр▒Бр░бр▒Б" : currentLanguage === 'kn' ? "AI р▓╕р▓╣р▓╛р▓пр▓Х" : "AI Assistant",
      description: currentLanguage === 'hi' ? "рд╣рд┐рдВрджреА, рддрдорд┐рд▓, рддреЗрд▓реБрдЧреБ, рдХрдиреНрдирдбрд╝, рдЕрдВрдЧреНрд░реЗрдЬреА рдореЗрдВ рдмрд╣реБрднрд╛рд╖реА AI рд╕рдорд░реНрдерди" : currentLanguage === 'ta' ? "роЗроирпНродро┐, родрооро┐ро┤рпН, родрпЖро▓рпБроЩрпНроХрпБ, роХройрпНройроЯроорпН, роЖроЩрпНроХро┐ро▓родрпНродро┐ро▓рпН рокройрпНроорпКро┤ро┐ AI роЖродро░ро╡рпБ" : currentLanguage === 'te' ? "р░╣р░┐р░Вр░жр▒А, р░др░ор░┐р░│р▒Н, р░др▒Жр░▓р▒Бр░Чр▒Б, р░Хр░ир▒Нр░ир░б, р░Зр░Вр░Чр▒Нр░▓р▒Ар░╖р▒НтАМр░▓р▒Л р░мр░╣р▒Бр░нр░╛р░╖р░╛ AI р░ор░жр▒Нр░жр░др▒Б" : currentLanguage === 'kn' ? "р▓╣р▓┐р▓Вр▓жр▓┐, р▓др▓ор▓┐р▓│р│Б, р▓др│Жр▓▓р│Бр▓Чр│Б, р▓Хр▓ир│Нр▓ир▓б, р▓Зр▓Вр▓Чр│Нр▓▓р▓┐р▓╖р│НтАМр▓ир▓▓р│Нр▓▓р▓┐ р▓мр▓╣р│Бр▓нр▓╛р▓╖р▓╛ AI р▓мр│Жр▓Вр▓мр▓▓" : "Multilingual AI support in Hindi, Tamil, Telugu, Kannada, English"
    },
    {
      icon: "ЁЯУН", 
      title: currentLanguage === 'hi' ? "рд╕реНрдерд╛рди-рдЖрдзрд╛рд░рд┐рдд" : currentLanguage === 'ta' ? "роЗроЯроорпН роЪро╛ро░рпНроирпНрод" : currentLanguage === 'te' ? "р░╕р▒Нр░ер░╛р░и-р░Жр░зр░╛р░░р░┐р░д" : currentLanguage === 'kn' ? "р▓╕р│Нр▓ер▓│-р▓Жр▓зр▓╛р▓░р▓┐р▓д" : "Location-Based",
      description: currentLanguage === 'hi' ? "рдЖрдкрд╛рддрдХрд╛рд▓реАрди рд╕реЗрд╡рд╛рдУрдВ рдХреЗ рд▓рд┐рдП рд╡рд╛рд╕реНрддрд╡рд┐рдХ рд╕рдордп рд╕реНрдерд╛рди рдЯреНрд░реИрдХрд┐рдВрдЧ" : currentLanguage === 'ta' ? "роЕро╡роЪро░роХро╛ро▓ роЪрпЗро╡рпИроХро│рпБроХрпНроХро╛рой роиро┐роХро┤рпНроирпЗро░ роЗроЯ роХрогрпНроХро╛рогро┐рокрпНрокрпБ" : currentLanguage === 'te' ? "р░Ер░др▒Нр░пр░╡р░╕р░░ р░╕р▒Зр░╡р░▓ р░Хр▒Лр░╕р░В р░ир░┐р░Ь-р░╕р░ор░п р░╕р▒Нр░ер░╛р░и р░Яр▒Нр░░р░╛р░Хр░┐р░Вр░Чр▒Н" : currentLanguage === 'kn' ? "р▓др│Бр▓░р│Нр▓др│Б р▓╕р│Зр▓╡р│Жр▓Чр▓│р▓┐р▓Чр▓╛р▓Чр▓┐ р▓ир│Ир▓Ь-р▓╕р▓ор▓п р▓╕р│Нр▓ер▓│ р▓Яр│Нр▓░р│Нр▓пр▓╛р▓Хр▓┐р▓Вр▓Чр│Н" : "Real-time location tracking for emergency services"
    },
    {
      icon: "тЪб",
      title: currentLanguage === 'hi' ? "рдСрдлрд▓рд╛рдЗрди рддреИрдпрд╛рд░" : currentLanguage === 'ta' ? "роЖроГрокрпНро▓рпИройрпН родропро╛ро░рпН" : currentLanguage === 'te' ? "р░Жр░лр▒НтАМр░▓р▒Ир░ир▒Н р░╕р░┐р░жр▒Нр░зр░В" : currentLanguage === 'kn' ? "р▓Жр▓лр│НтАМр▓▓р│Ир▓ир│Н р▓╕р▓┐р▓жр│Нр▓з" : "Offline Ready", 
      description: currentLanguage === 'hi' ? "рдЗрдВрдЯрд░рдиреЗрдЯ рдХрдиреЗрдХреНрд╢рди рдХреЗ рдмрд┐рдирд╛ рднреА рдХрд╛рдо рдХрд░рддрд╛ рд╣реИ" : currentLanguage === 'ta' ? "роЗрогрпИроп роЗрогрпИрокрпНрокрпБ роЗро▓рпНро▓ро╛рооро▓рпБроорпН ро╡рпЗро▓рпИ роЪрпЖропрпНроХро┐ро▒родрпБ" : currentLanguage === 'te' ? "р░Зр░Вр░Яр░░р▒Нр░ир▒Жр░Яр▒Н р░Хр░ир▒Жр░Хр▒Нр░╖р░ир▒Н р░▓р▒Зр░Хр▒Бр░Вр░бр░╛ р░Хр▒Вр░бр░╛ р░кр░ир░┐ р░Ър▒Зр░╕р▒Нр░др▒Бр░Вр░жр░┐" : currentLanguage === 'kn' ? "р▓Зр▓Вр▓Яр▓░р│Нр▓ир│Жр▓Яр│Н р▓╕р▓Вр▓кр▓░р│Нр▓Хр▓╡р▓┐р▓▓р│Нр▓▓р▓жр│Жр▓пр│В р▓Хр│Жр▓▓р▓╕ р▓ор▓╛р▓бр│Бр▓др│Нр▓др▓жр│Ж" : "Works even without internet connection"
    }
  ];

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 via-white to-red-50">
      <Navbar 
        onEmergencyClick={() => setIsEmergencyContactsOpen(true)}
        currentLanguage={currentLanguage}
        onLanguageChange={setCurrentLanguage}
        onNavigation={handleNavigation}
      />
      
      {/* Hero Section */}
      <section ref={heroRef} className="container mx-auto px-4 pt-24 pb-12">
        <div className="text-center max-w-4xl mx-auto">
          <Badge variant="secondary" className="mb-4 bg-orange-100 text-orange-800">
            {t.madeFor}
          </Badge>
          <h1 className="text-4xl md:text-6xl font-bold text-gray-900 mb-6 leading-tight">
            {t.title}
          </h1>
          <p className="text-xl md:text-2xl text-gray-600 mb-8">
            {t.subtitle}
          </p>
          <div className="flex flex-col sm:flex-row gap-4 justify-center">
            <Button 
              size="lg" 
              className="bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700"
              onClick={() => openChatWithPrompt("Hi, I'm new to CIVI-SHIELD. Can you guide me through how this works?")}
            >
              {t.getStarted}
            </Button>
            <Button 
              size="lg" 
              variant="outline"
              className="border-red-500 text-red-600 hover:bg-red-50"
              onClick={() => openChatWithPrompt("I need to report an emergency right now!")}
            >
              {t.reportEmergency}
            </Button>
          </div>
        </div>
      </section>

      {/* Features Section */}
      <section ref={dashboardRef} className="container mx-auto px-4 py-12">
        <h2 className="text-3xl font-bold text-center mb-12 text-gray-900">
          {t.keyFeatures}
        </h2>
        <div className="grid md:grid-cols-3 gap-8">
          {features.map((feature, index) => (
            <FeatureCard key={index} {...feature} />
          ))}
        </div>
      </section>

      {/* Quick Actions Section */}
      <section ref={featuresRef} className="container mx-auto px-4 py-12">
        <h2 className="text-3xl font-bold text-center mb-12 text-gray-900">
          {t.quickActions}
        </h2>
        <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6">
          {quickActions.map((action, index) => (
            <QuickActionCard 
              key={index} 
              {...action} 
              onClick={() => openChatWithPrompt(action.prompt)}
            />
          ))}
        </div>
      </section>

      {/* Additional Info Section */}
      <section className="container mx-auto px-4 py-12">
        <Card className="bg-gradient-to-r from-orange-50 to-red-50 border-orange-200">
          <CardHeader className="text-center">
            <CardTitle className="text-2xl text-orange-800">{t.support24}</CardTitle>
            <CardDescription className="text-orange-600">
              {t.supportDesc}
            </CardDescription>
          </CardHeader>
          <CardContent className="text-center">
            <div className="flex flex-wrap justify-center gap-2 mb-6">
              <Badge variant="secondary">рд╣рд┐рдВрджреА</Badge>
              <Badge variant="secondary">English</Badge>
              <Badge variant="secondary">родрооро┐ро┤рпН</Badge>
              <Badge variant="secondary">р░др▒Жр░▓р▒Бр░Чр▒Б</Badge>
              <Badge variant="secondary">р▓Хр▓ир│Нр▓ир▓б</Badge>
            </div>
            <Button 
              className="bg-orange-600 hover:bg-orange-700"
              onClick={() => openChatWithPrompt("Can you help me understand what to do in different emergency situations?")}
            >
              {t.startAI}
            </Button>
          </CardContent>
        </Card>
      </section>

      {/* ChatBot Component */}
      <ChatBot 
        isOpen={isChatOpen}
        onClose={() => setIsChatOpen(false)}
        initialPrompt={chatPrompt}
        language={currentLanguage}
      />

      {/* Emergency Contacts Component */}
      <EmergencyContacts 
        isOpen={isEmergencyContactsOpen}
        onClose={() => setIsEmergencyContactsOpen(false)}
      />
    </div>
  );
};

export default Index;
